version: "3.8"

services:
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-ralts}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ralts}
      POSTGRES_DB: ${POSTGRES_DB:-ralts}
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-ralts} -d ${POSTGRES_DB:-ralts} || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  app:
    build: .
    restart: on-failure
    env_file:
      - .env
    environment:
      DATABASE_URL: ${DATABASE_URL:-postgresql+asyncpg://${POSTGRES_USER:-ralts}:${POSTGRES_PASSWORD:-ralts}@db:5432/${POSTGRES_DB:-ralts}}
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./:/app
    healthcheck:
      test: ["CMD-SHELL", "python -c 'import urllib.request,sys; sys.exit(0 if urllib.request.urlopen(\"http://localhost:8000/healthcheck\").getcode()==200 else 1)'" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

volumes:
  db_data:
